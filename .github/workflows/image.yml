name: Publish Docker Image
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: 'latest'
        
env:
  CARGO_TERM_COLOR: always

jobs:
  build-amd64:
    runs-on: wave-autoscale-build-amd64
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        timeout-minutes: 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ vars.DOCKER_IMAGE_TAG }}:${{ github.sha }}-amd64
          cache-from: type=registry,ref=waveautoscale/wave-autoscale:buildcache-amd64
          cache-to: type=registry,ref=waveautoscale/wave-autoscale:buildcache-amd64,mode=max
          labels: |
            org.opencontainers.image.title=wave-autoscale
            org.opencontainers.image.description="Wave Autoscale is a open-source traffic & scaling automation tool."
            org.opencontainers.image.url="https://waveautoscale.com"
  build-arm64:
    runs-on: wave-autoscale-build-arm64
    timeout-minutes: 30
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        timeout-minutes: 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ vars.DOCKER_IMAGE_TAG }}:${{ github.sha }}-arm64
          cache-from: type=registry,ref=waveautoscale/wave-autoscale:buildcache-arm64
          cache-to: type=registry,ref=waveautoscale/wave-autoscale:buildcache-arm64,mode=max
          labels: |
            org.opencontainers.image.title=wave-autoscale
            org.opencontainers.image.description="Wave Autoscale is a open-source traffic & scaling automation tool."
            org.opencontainers.image.url="https://waveautoscale.com"
  manifest:
    needs: [build-amd64, build-arm64]
    runs-on: wave-autoscale-build-amd64
    environment: production
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push Docker manifest
        run: |
          docker buildx imagetools create -t ${{ vars.DOCKER_IMAGE_TAG }}:${{ inputs.version }} \
            ${{ vars.DOCKER_IMAGE_TAG }}:${{ github.sha }}-amd64 \
            ${{ vars.DOCKER_IMAGE_TAG }}:${{ github.sha }}-arm64
