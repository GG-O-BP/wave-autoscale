---
kind: Metric
id: prometheus_api_server_cpu_average_total
metric_kind: prometheus
metadata:
  endpoint: http://3.34.170.13:9090
  # Note: query must return a vector/scalar single element response
  query: avg(100 - (avg(rate(node_cpu_seconds_total{mode="idle"}[20s])) by (hostname) * 100))
  # milliseconds
  polling_interval: 1000
---
kind: ScalingComponent
id: ec2_autoscaling_api_server
component_kind: aws-ec2-autoscaling
metadata:
  region: ap-northeast-2
  access_key: AKIAU7BQ6ZTCA2XGEZNN
  secret_key: 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
  asg_name: tf-wa-20230322020900305100000006
---
kind: ScalingPlan
id: scaling_plan_ec2_autoscaling
title: "Scaling Plan for EC2 Autoscaling"
plans:
  - id: scale-out-plan-1
    description: "Scale out if CPU usage is greater than 30%."
    # JavaScript expression that returns a boolean value.
    expression: >
      get({
        name: 'prometheus_api_server_cpu_average_total',
        tags: 'hostname:ip-172-31-11-11.ap-northeast-2.compute.internal',
      }) > 30
    # Higher priority values will be checked first.
    priority: 1
    scaling_components:
      - component_id: ec2_autoscaling_api_server
        # JavaScript expression that returns an integer.
        desired: "Math.floor(prometheus_api_server_cpu_average_total / 10)"
        # desired: "Math.floor(prometheus_api_server_cpu_average / 10)"
        # If the result of desired is 5 but right after it, the result of desired is 3 then the desired capacity will be set to 3.
  - id: scale-out-plan-2
    description: "Scale out if CPU usage is greater than 80%."
    expression: "prometheus_api_server_cpu_average_total >= 80"
    priority: 2
    scaling_components:
      - component_id: ec2_autoscaling_api_server
        desired: "Math.floor(prometheus_api_server_cpu_average / 5)"
  - id: scale-in-plan-1
    description: "Scale in if CPU usage is less than 30%."
    expression: "prometheus_api_server_cpu_average_total < 30"
    priority: 3
    scaling_components:
      - component_id: ec2_autoscaling_api_server
        desired: 1
  # TODO: Support Python expression
  # - id: scale-in-plan-1
  #   description: "Scale in if CPU usage is less than 30%."
  #   expression_python: "prometheus_api_server_cpu_average_total >= 80"
  #   priority: 3
  #   scaling_components:
  #     - component_id: ec2_autoscaling_api_server
  #       desired: 1
