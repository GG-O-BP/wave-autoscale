language: "rust"
type: "application"
owners:
  defaultOwner: '@wave-autoscale-team'
  
dependsOn:
  - "data-layer"

tasks:
  test:
    command: "cargo nextest run -p wave-autoscale"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: debug
  # Unit testing
  test-aws-ecs-service-scaling:
    command: "cargo test -p wave-autoscale --test aws_ecs_service_scaling -- --nocapture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-aws-lambda-function:
    command: "cargo test -p wave-autoscale --test aws_lambda_function -- --nocapture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  # Run
  run-help:
    command: "cargo watch -c -x 'run -- --help'"
    deps:
      - "lint"
    inputs:
      - "@globs(sources)"
    env:
      RUST_LOG: debug
  run-autoscaling-history-retention:
    # command: "cargo watch -c -x 'run -- --autoscaling-history-retention=1d'"
    command: "cargo run -- --autoscaling-history-retention=1d"
    deps:
      - "lint"
    inputs:
      - "@globs(sources)"
    env:
      RUST_LOG: wave_controller=debug
  run-with-empty:
    command: "cargo watch -c -x 'run'"
    deps:
      - "lint"
    inputs:
      - "@globs(sources)"
    env:
      RUST_LOG: debug
  run:
    command: "cargo watch -c -x 'run -- -p ./tests/yaml/plan_prometheus_ec2.yaml'"
    deps:
      - "lint"
    inputs:
      - "@globs(sources)"
    env:
      RUST_LOG: debug

  # Build for Production
  # Linux
  build-aarch64-unknown-linux-gnu:
    command: "cargo build --release --target aarch64-unknown-linux-gnu"
    inputs:
      - "@globs(sources)"
  build-aarch64-unknown-linux-musl:
    command: "cargo build --release --target aarch64-unknown-linux-musl"
    inputs:
      - "@globs(sources)"
  build-x86_64-unknown-linux-gnu:
    command: "cargo build --release --target x86_64-unknown-linux-gnu"
    inputs:
      - "@globs(sources)"
  build-x86_64-unknown-linux-musl:
    command: "cargo build --release --target x86_64-unknown-linux-musl"
    inputs:
      - "@globs(sources)"
  # Mac
  build-x86_64-apple-darwin:
    command: "cargo build --release --target x86_64-apple-darwin"
    inputs:
      - "@globs(sources)"
  build-aarch64-apple-darwin:
    command: "cargo build --release --target aarch64-apple-darwin"
    inputs:
      - "@globs(sources)"
    outputs:
      - "/target/aarch64-apple-darwin/release/wave-controller"
