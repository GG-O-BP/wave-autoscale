language: "rust"
type: "application"
owners:
  defaultOwner: "@wave-autoscale-team"

dependsOn:
  - "data-layer"

tasks:
  test:
    command: "cargo nextest run -p wave-autoscale --test-threads=1"
    deps:
      - "utils:test"
      - "data-layer:test"
      - "api-server:test"
    env:
      RUST_LOG: wave_autoscale=debug
  test-aws-ecs-service-scaling:
    command: "cargo test -p wave-autoscale --test aws_ecs_service_scaling -- --nocapture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-aws-lambda-function:
    command: "cargo test -p wave-autoscale --test aws_lambda_function -- --nocapture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-amazon-dynamodb-table:
    command: "cargo nextest run -p wave-autoscale --test amazon_dynamodb_table --no-capture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-google-cloud-functions-instance:
    command: "cargo nextest run -p wave-autoscale --test google_cloud_functions_instance --no-capture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-google-cloud-run-service:
    command: "cargo nextest run -p wave-autoscale --test google_cloud_run_service --no-capture"
    deps:
      - "data-layer:build"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_autoscale=debug
  test-simulation:
    command: "cargo nextest run -p wave-autoscale test_simulation --no-capture"
    deps:
      - "data-layer:lint"
    env:
      RUST_LOG: metrics_test=debug
    options:
      runFromWorkspaceRoot: true
      cache: false
  # Run
  run:
    command:
      - "cargo"
      - "run"
      - "-p"
      - "wave-autoscale"
      - "--"
      - "--config"
      - "./tests/config/wave-config.yaml"
      # - "--definition"
      # - "./core/wave-autoscale/tests/yaml/plan_cloudwatch_ecs_ec2.yaml"
    env:
      RUST_LOG: wave_autoscale=debug
  run-help:
    command:
      - "cargo"
      - "run"
      - "-p"
      - "wave-autoscale"
      - "--"
      - "--help"
    env:
      RUST_LOG: wave_autoscale=debug
  # Build for Production
  # Linux
  build-aarch64-unknown-linux-gnu:
    command: "cargo build --release --target aarch64-unknown-linux-gnu"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
  build-aarch64-unknown-linux-musl:
    command: "cargo build --release --target aarch64-unknown-linux-musl"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
  build-x86_64-unknown-linux-gnu:
    command: "cargo build --release --target x86_64-unknown-linux-gnu"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
  build-x86_64-unknown-linux-musl:
    command: "cargo build --release --target x86_64-unknown-linux-musl"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
  # Mac
  build-x86_64-apple-darwin:
    command: "cargo build --release --target x86_64-apple-darwin"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
  build-aarch64-apple-darwin:
    command: "cargo build --release --target aarch64-apple-darwin"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
    outputs:
      - "/target/aarch64-apple-darwin/release/wave-autoscale"
