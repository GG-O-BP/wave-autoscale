---
kind: Metric
id: telegraf_cloudwatch_aws_ec2_autoscaling_metrics
collector: telegraf
metadata:
  inputs:
    cloudwatch:
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/EC2]
        metrics: # SELECT MAX(CPUUtilization) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: [CPUUtilization] # CPU usage reflects the current workload of the instance. High CPU usage may indicate that the instance is overloaded with the current workload and can be a signal for scaling out. If CPU usage remains consistently high, it may be necessary to start additional instances to distribute the load.
            statistic_include: [maximum] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/EC2]
        metrics: # SELECT MAX(DiskReadOps) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: [DiskReadOps] # High disk read operations can indicate an increasing I/O load on the disks. This can be a signal to consider scaling out.
            statistic_include: [maximum] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/EC2]
        metrics: # SELECT MAX(DiskWriteOps) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: [DiskWriteOps] # High disk write operations can indicate an increasing write I/O load on the disks. This can be a signal to consider scaling out.
            statistic_include: [maximum] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/EC2]
        metrics: # SELECT MAX(NetworkIn) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: [NetworkIn] # High network ingress indicates a high network traffic load on the instance. This can be a signal to consider scaling out.
            statistic_include: [maximum] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/EC2]
        metrics: # SELECT MAX(NetworkOut) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: [NetworkOut] # High network egress indicates a high network traffic load leaving the instance. This can be a signal to consider scaling out.
            statistic_include: [maximum] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
  outputs:
    wave-autoscale: {}
---
kind: ScalingComponent
id: scaling_component_aws_ec2_autoscaling_capacity
component_kind: aws-ec2-autoscaling
metadata:
  region: "{{ region }}"
  asg_name: "{{ asg_name }}"
---
kind: ScalingPlan
id: scaling_plan_aws_ec2_autoscaling_capacity
title: scaling plan for aws ec2 autoscaling capacity
  cool_down: 0 # seconds
  interval: 60000 # milliseconds
plans:
  # When the value of instance cpu utilization is low (less than 10), the instance configuration values decreases (scaling in), which reflects the low usage.
  # When the value of instance cpu utilization is high (exceeding 90), the instance configuration values increases (scaling out) to meet the high demand.
  - id: scaling_plan_aws_ec2_autoscaling_capacity_scale_in
    description: scale-in capacity
    # JavaScript expression that returns a boolean value.
    expression: >
      (get({
        metric_id: 'telegraf_cloudwatch_aws_ec2_autoscaling_metrics',
        name: 'cloudwatch_aws_ec2_cpu_utilization_maximum',
        tags: {
          'instance_name': '{{ instance_name }}'
        },
        period_sec: 60
      }) < 10
    priority: 1
    scaling_components:
      - component_id: scaling_component_aws_ec2_autoscaling_capacity
        desired: 1
  - id: scaling_plan_aws_ec2_autoscaling_capacity_scale_out
    description: scale-out capacity
    # JavaScript expression that returns a boolean value.
    expression: >
      (get({
        metric_id: 'telegraf_cloudwatch_aws_ec2_autoscaling_metrics',
        name: 'cloudwatch_aws_ec2_cpu_utilization_maximum',
        tags: {
          'instance_name': '{{ instance_name }}'
        },
        period_sec: 60
      }) > 90
    priority: 2
    scaling_components:
      - component_id: scaling_component_aws_ec2_autoscaling_capacity
        desired: 10
