---
kind: Metric
id: telegraf_cloudwatch_aws_waf_metrics
collector: telegraf
metadata:
  inputs:
    cloudwatch:
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/WAFV2]
        metrics: # SELECT SUM(AllowedRequests) FROM SCHEMA("AWS/WAFV2", Region,Rule,WebACL) WHERE WebACL = '"{{ web_acl_name }}"' AND Region = '"{{ region }}"' AND Rule = '"{{ rule_name }}"'
          - names: [AllowedRequests] # This metric tracks the number of allowed web requests. From a scaling perspective, if the "Allowed Requests" metric decreases, it indicates a reduction in traffic, making scale-in a potential consideration. Conversely, if the metric increases, it signals a traffic surge, warranting consideration for scale-out.
            statistic_include: [sum] # Collect the metrics with the Sum statistic.
            dimensions:
              - name: Region
                value: "{{ region }}"
              - name: Rule
                value: "{{ rule_name }}"
              - name: WebACL
                value: "{{ web_acl_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/WAFV2]
        metrics: # SELECT SUM(BlockedRequests) FROM SCHEMA("AWS/WAFV2", Region,Rule,WebACL) WHERE WebACL = '"{{ web_acl_name }}"' AND Region = '"{{ region }}"' AND Rule = '"{{ rule_name }}"'
          - names: [BlockedRequests] # This metric monitors the number of blocked web requests. In terms of scaling, a decrease in the "Blocked Requests" metric suggests a decline in blocked traffic, prompting consideration for scale-in. Conversely, an increase in this metric implies a rise in blocked traffic, making scale-out a relevant consideration.
            statistic_include: [sum] # Collect the metrics with the Sum statistic.
            dimensions:
              - name: Region
                value: "{{ region }}"
              - name: Rule
                value: "{{ rule_name }}"
              - name: WebACL
                value: "{{ web_acl_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/WAFV2]
        metrics: # SELECT SUM(CountedRequests) FROM SCHEMA("AWS/WAFV2", Region,Rule,WebACL) WHERE WebACL = '"{{ web_acl_name }}"' AND Region = '"{{ region }}"' AND Rule = '"{{ rule_name }}"'
          - names: [CountedRequests] # This metric reflects the number of web requests matching at least one rule. In the context of scaling, a decrease in the "Counted Requests" metric indicates a reduction in traffic matched by rules, prompting consideration for scale-in. Conversely, an increase in this metric signifies more traffic matched by rules, making scale-out a consideration.
            statistic_include: [sum] # Collect the metrics with the Sum statistic.
            dimensions:
              - name: Region
                value: "{{ region }}"
              - name: Rule
                value: "{{ rule_name }}"
              - name: WebACL
                value: "{{ web_acl_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/WAFV2]
        metrics: # SELECT SUM(RequestsWithValidCaptchaToken) FROM SCHEMA("AWS/WAFV2", Region,Rule,WebACL) WHERE WebACL = '"{{ web_acl_name }}"' AND Region = '"{{ region }}"' AND Rule = '"{{ rule_name }}"'
          - names: [RequestsWithValidCaptchaToken] # This metric records the number of web requests with CAPTCHA challenges. Regarding scaling, a decrease in "CAPTCHA Requests" suggests a decrease in CAPTCHA challenge usage, making scale-in a consideration. Conversely, an increase in this metric implies heightened CAPTCHA challenge usage, warranting consideration for scale-out.
            statistic_include: [sum] # Collect the metrics with the Sum statistic.
            dimensions:
              - name: Region
                value: "{{ region }}"
              - name: Rule
                value: "{{ rule_name }}"
              - name: WebACL
                value: "{{ web_acl_name }}"
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: 1m
        delay: 1m
        interval: 1m
        namespaces: [AWS/WAFV2]
        metrics: # SELECT SUM(ChallengeRequests) FROM SCHEMA("AWS/WAFV2", Region,Rule,WebACL) WHERE WebACL = '"{{ web_acl_name }}"' AND Region = '"{{ region }}"' AND Rule = '"{{ rule_name }}"'
          - names: [ChallengeRequests] # This metric monitors the number of web requests with challenge controls applied. In terms of scaling, a decrease in "Challenge Requests" implies a reduction in challenge control usage, prompting consideration for scale-in. Conversely, an increase in this metric indicates an uptick in challenge control usage, making scale-out a relevant consideration. These metrics enable informed decisions for scaling based on traffic patterns and resource needs.
            statistic_include: [sum] # Collect the metrics with the Sum statistic.
            dimensions:
              - name: Region
                value: "{{ region }}"
              - name: Rule
                value: "{{ rule_name }}"
              - name: WebACL
                value: "{{ web_acl_name }}"
  outputs:
    wave-autoscale: {}
---
kind: ScalingComponent
id: scaling_component_aws_waf_rate_limit
component_kind: aws-ec2-autoscaling
metadata:
  region: "{{ region }}"
  web_acl_id: "{{ web_acl_id }}"
  web_acl_name: "{{ web_acl_name }}"
  scope: "{{ scope }}"
---
kind: ScalingPlan
id: scaling_plan_aws_waf_rate_limit
metadata:
  title: scaling plan for aws waf rate limit
  cool_down: 0 # seconds
  interval: 60000 # milliseconds
plans:
  # When the number of blocked request is low (less than 100), the rate limit decreases (scaling in), which reflects the low usage.
  # When the number of blocked request is high (exceeding 1000), the rate limit (scaling out) to meet the high demand.
  - id: scaling_plan_aws_waf_rate_limit_scale_in
    description: scale-in rate limit
    # JavaScript expression that returns a boolean value.
    expression: >
      (get({
        metric_id: 'telegraf_cloudwatch_aws_waf_metrics',
        name: 'cloudwatch_aws_waf_blocked_requests_sum',
        tags: {
          'region': '{{ region }}'
          'rule': '{{ rule_name }}'
          'web_acl': '{{ web_acl_name }}'
        },
        period_sec: 60
      }) < 100
    # Higher priority values will be checked first.
    priority: 1
    scaling_components:
      - component_id: scaling_component_aws_waf_rate_limit
        rule_name: "{{ rule_name }}"
        rate_limit: 100
  - id: scaling_plan_aws_waf_rate_limit_scale_out
    description: scale-out rate limit
    # JavaScript expression that returns a boolean value.
    expression: >
      (get({
        metric_id: 'telegraf_cloudwatch_aws_waf_metrics',
        name: 'cloudwatch_aws_waf_blocked_requests_sum',
        tags: {
          'region': '{{ region }}'
          'rule': '{{ rule_name }}'
          'web_acl': '{{ web_acl_name }}'
        },
        period_sec: 60
      }) > 1000
    # Higher priority values will be checked first.
    priority: 2
    scaling_components:
      - component_id: scaling_component_aws_waf_rate_limit
        rule_name: "{{ rule_name }}"
        rate_limit: 1000
