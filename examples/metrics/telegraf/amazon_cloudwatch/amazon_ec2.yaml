kind: Metric
id: telegraf_cloudwatch_amazon_ec2_metrics
collector: telegraf
metadata:
  inputs:
    cloudwatch:
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: "1m"
        delay: "1m"
        interval: "1m"
        namespaces: ["AWS/EC2"]
        metrics: # SELECT MAX(CPUUtilization) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: ["CPUUtilization"] # CPU usage reflects the current workload of the instance. High CPU usage may indicate that the instance is overloaded with the current workload and can be a signal for scaling out. If CPU usage remains consistently high, it may be necessary to start additional instances to distribute the load.
            statistic_include: ["maximum"] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
        tags:
          metric_id: telegraf_cloudwatch_amazon_ec2_metrics
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: "1m"
        delay: "1m"
        interval: "1m"
        namespaces: ["AWS/EC2"]
        metrics: # SELECT MAX(DiskReadOps) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: ["DiskReadOps"] # High disk read operations can indicate an increasing I/O load on the disks. This can be a signal to consider scaling out.
            statistic_include: ["maximum"] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
        tags:
          metric_id: telegraf_cloudwatch_amazon_ec2_metrics
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: "1m"
        delay: "1m"
        interval: "1m"
        namespaces: ["AWS/EC2"]
        metrics: # SELECT MAX(DiskWriteOps) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: ["DiskWriteOps"] # High disk write operations can indicate an increasing write I/O load on the disks. This can be a signal to consider scaling out.
            statistic_include: ["maximum"] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
        tags:
          metric_id: telegraf_cloudwatch_amazon_ec2_metrics
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: "1m"
        delay: "1m"
        interval: "1m"
        namespaces: ["AWS/EC2"]
        metrics: # SELECT MAX(NetworkIn) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: ["NetworkIn"] # High network ingress indicates a high network traffic load on the instance. This can be a signal to consider scaling out.
            statistic_include: ["maximum"] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
        tags:
          metric_id: telegraf_cloudwatch_amazon_ec2_metrics
      - region: "{{ region }}"
        profile: "{{ profile }}"
        period: "1m"
        delay: "1m"
        interval: "1m"
        namespaces: ["AWS/EC2"]
        metrics: # SELECT MAX(NetworkOut) FROM SCHEMA("AWS/EC2", AutoScalingGroupName) WHERE AutoScalingGroupName = '"{{ auto_scaling_group_name }}"'
          - names: ["NetworkOut"] # High network egress indicates a high network traffic load leaving the instance. This can be a signal to consider scaling out.
            statistic_include: ["maximum"] # Collect the metrics with the Maximum statistic.
            dimensions:
              - name: AutoScalingGroupName
                value: "{{ auto_scaling_group_name }}"
        tags:
          metric_id: telegraf_cloudwatch_amazon_ec2_metrics
  outputs:
    wave-autoscale: {}
  agent:
    interval: "10s" # Default data collection interval for all inputs. Intervals are durations of time and can be specified for supporting settings by combining an integer value and time unit as a string value. Valid time units are ns, us (or Âµs), ms, s, m, h.
    round_interval: true # Rounds collection interval to interval ie, if interval="10s" then always collect on :00, :10, :20, etc.
    metric_batch_size: 1000 # Telegraf will send metrics to outputs in batches of at most metric_batch_size metrics. This controls the size of writes that Telegraf sends to output plugins.
    metric_buffer_limit: 10000 # Maximum number of unwritten metrics per output. Increasing this value allows for longer periods of output downtime without dropping metrics at the cost of higher maximum memory usage.
    collection_jitter: "0s" # Collection jitter is used to jitter the collection by a random interval. Each plugin will sleep for a random time within jitter before collecting. This can be used to avoid many plugins querying things like sysfs at the same time, which can have a measurable effect on the system.
    flush_interval: "1s" # Default flushing interval for all outputs. Maximum flush_interval will be flush_interval + flush_jitter.
    flush_jitter: "0s" # Default flush jitter for all outputs. This jitters the flush interval by a random amount. This is primarily to avoid large write spikes for users running a large number of telegraf instances. ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s.
    precision: "0s" # Collected metrics are rounded to the precision specified as an interval. Precision will NOT be used for service inputs. It is up to each individual service input to set the timestamp at the appropriate precision.
    debug: false # Log at debug level.
---

